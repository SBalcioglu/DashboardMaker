.app {
  display: flex;
  height: 100vh;
  overflow: hidden;
}

.main-content {
  flex: 1;
  padding: 24px;
  overflow-y: auto;
  background-color: var(--bg-primary);
  position: relative;
}


.empty-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
  text-align: center;
}

.empty-state h2 {
  font-size: 32px;
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: 12px;
}

.empty-state p {
  font-size: 16px;
  color: var(--text-secondary);
}

.status-message {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
  gap: 16px;
}

.status-message p {
  font-size: 16px;
  color: var(--text-primary);
}

.status-message.error p {
  color: var(--danger);
}

.spinner {
  width: 40px;
  height: 40px;
  border: 4px solid var(--bg-tertiary);
  border-top: 4px solid var(--accent);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.dashboard-content {
  display: flex;
  flex-direction: column;
  gap: 24px;
}

.visualizations-section {
  margin-top: 24px;
}

.visualizations-header {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 16px;
  margin-bottom: 20px;
}

.visualizations-header h3 {
  font-size: 28px;
  font-weight: 600;
  color: var(--text-primary);
  margin: 0;
}

.data-preview {
  background-color: var(--bg-secondary);
  border: 1px solid var(--border-color);
  border-radius: 8px;
  padding: 20px;
  margin-bottom: 20px;
}

.data-preview h4 {
  font-size: 16px;
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: 12px;
}

.preview-stats {
  display: flex;
  gap: 24px;
  font-size: 14px;
  color: var(--text-secondary);
  margin-bottom: 16px;
}

.preview-table-container {
  overflow-x: auto;
  border: 1px solid var(--border-color);
  border-radius: 6px;
}

.preview-table {
  width: 100%;
  border-collapse: collapse;
  background-color: var(--bg-tertiary);
}

.preview-table th {
  padding: 10px 12px;
  text-align: left;
  font-size: 13px;
  font-weight: 600;
  color: var(--text-primary);
  background-color: var(--bg-secondary);
  border-bottom: 1px solid var(--border-color);
}

.preview-table td {
  padding: 8px 12px;
  font-size: 13px;
  color: var(--text-primary);
  border-bottom: 1px solid var(--border-color);
}

.preview-table tr:hover {
  background-color: var(--bg-hover);
}

.visualizations-grid {
  position: relative;
  width: 100% !important;
}

.visualizations-grid .react-grid-item {
  transition: all 200ms ease;
  transition-property: left, top, width, height;
}

.visualizations-grid .react-grid-item.react-grid-placeholder {
  background: var(--accent);
  opacity: 0.2;
  border-radius: 8px;
}

.visualizations-grid .react-grid-item.resizing {
  transition: none;
  z-index: 100;
  will-change: width, height;
}

.visualizations-grid .react-resizable-handle {
  position: absolute;
  width: 20px;
  height: 20px;
}

.visualizations-grid .react-resizable-handle::after {
  content: "";
  position: absolute;
  right: 3px;
  bottom: 3px;
  width: 5px;
  height: 5px;
  border-right: 2px solid var(--border-color);
  border-bottom: 2px solid var(--border-color);
}

.visualizations-grid .react-resizable-handle:hover::after {
  border-color: var(--accent);
}

.visualizations-grid .react-resizable-handle-sw {
  bottom: 0;
  left: 0;
  cursor: sw-resize;
}

.visualizations-grid .react-resizable-handle-se {
  bottom: 0;
  right: 0;
  cursor: se-resize;
}

.visualizations-grid .react-resizable-handle-nw {
  top: 0;
  left: 0;
  cursor: nw-resize;
}

.visualizations-grid .react-resizable-handle-ne {
  top: 0;
  right: 0;
  cursor: ne-resize;
}

.viz-drag-handle {
  cursor: move;
  cursor: grab;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0 12px;
  font-size: 18px;
  color: var(--text-secondary);
  user-select: none;
  transition: color 0.2s;
}

.viz-drag-handle:hover {
  color: var(--text-primary);
}

.viz-drag-handle:active {
  cursor: grabbing;
  color: var(--primary-color);
}
